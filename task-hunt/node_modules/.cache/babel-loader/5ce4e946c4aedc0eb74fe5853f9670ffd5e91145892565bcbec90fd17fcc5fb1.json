{"ast":null,"code":"var _jsxFileName = \"D:\\\\defauls\\\\taskhunt\\\\task-hunt\\\\src\\\\component\\\\dropdown\\\\CustomDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"../../common-component/nav/Navbar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MdOutlineArrowDropDown } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomDropdown = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const navigate = useNavigate();\n  const dropdownRef = useRef(null);\n  const options = [{\n    label: \"Admisson\",\n    path: \"/admisson\"\n  }, {\n    label: \"Sip\",\n    path: \"/sip\"\n  }, {\n    label: \"Abroad Study \",\n    path: \"/aboradstudy\"\n  }, {\n    label: \"Skills \",\n    path: \"/skill\"\n  }];\n\n  // Function to handle selection\n  const handleSelect = path => {\n    navigate(path);\n    setIsOpen(false); // Close dropdown after selecting an option\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      className: \"dropdown-btn\",\n      children: [\"Services\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(MdOutlineArrowDropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-options-container \",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-option\",\n        onClick: () => handleSelect(option.path),\n        children: option.label\n      }, option.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomDropdown, \"VAen4O2SdgmBboiuuhgwUxxXuh0=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomDropdown;\nexport default CustomDropdown;\nvar _c;\n$RefreshReg$(_c, \"CustomDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","MdOutlineArrowDropDown","jsxDEV","_jsxDEV","CustomDropdown","_s","isOpen","setIsOpen","navigate","dropdownRef","options","label","path","handleSelect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","ref","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","option","_c","$RefreshReg$"],"sources":["D:/defauls/taskhunt/task-hunt/src/component/dropdown/CustomDropdown.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../../common-component/nav/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MdOutlineArrowDropDown } from \"react-icons/md\";\r\n\r\nconst CustomDropdown = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const dropdownRef = useRef(null);\r\n\r\n  const options = [\r\n    { label: \"Admisson\", path: \"/admisson\" },\r\n    { label: \"Sip\", path: \"/sip\" },\r\n    { label: \"Abroad Study \", path: \"/aboradstudy\" },\r\n    { label: \"Skills \", path: \"/skill\" },\r\n  ];\r\n\r\n  // Function to handle selection\r\n  const handleSelect = (path) => {\r\n    navigate(path);\r\n    setIsOpen(false); // Close dropdown after selecting an option\r\n  };\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative\" ref={dropdownRef}>\r\n      {/* Dropdown Toggle Button */}\r\n      <button onClick={() => setIsOpen(!isOpen)} className=\"dropdown-btn\">\r\n        Services\r\n        <i className=\"\">\r\n          <MdOutlineArrowDropDown />\r\n        </i>\r\n      </button>\r\n\r\n      {/* Dropdown Menu */}\r\n      {isOpen && (\r\n        <ul className=\"dropdown-options-container \">\r\n          {options.map((option) => (\r\n            <li\r\n              key={option.path}\r\n              className=\"dropdown-option\"\r\n              onClick={() => handleSelect(option.path)}\r\n            >\r\n              {option.label}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomDropdown;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}